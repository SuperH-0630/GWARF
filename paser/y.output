终端机在文法中未使用

    INDENTA


状态 46冲突：4 项偏移/归约
状态 57冲突：1 项偏移/归约
状态 64冲突：1 项偏移/归约
状态 70冲突：1 项偏移/归约
状态 112冲突：1 项偏移/归约
状态 123冲突：1 项偏移/归约
状态 136冲突：1 项偏移/归约
状态 137冲突：1 项偏移/归约
状态 261冲突：1 项偏移/归约
状态 281冲突：1 项偏移/归约
状态 282冲突：1 项偏移/归约
状态 356冲突：1 项偏移/归约
状态 358冲突：1 项偏移/归约


语法

    0 $accept: command_block $end

    1 command_block: command_list

    2 command_list: command
    3             | command_list command

    4 command: top_exp stop_token
    5        | while_block stop_token
    6        | if_block stop_token
    7        | break_exp stop_token
    8        | broken_exp stop_token
    9        | continue_exp stop_token
   10        | continued_exp stop_token
   11        | restart_exp stop_token
   12        | restarted_exp stop_token
   13        | REGO stop_token
   14        | REWENT stop_token
   15        | default_token stop_token
   16        | global_token stop_token
   17        | for_block stop_token
   18        | nonlocal_token stop_token
   19        | block_block stop_token
   20        | def_block stop_token
   21        | return_exp stop_token
   22        | class_block stop_token
   23        | try_block stop_token
   24        | raise_exp stop_token
   25        | import_exp stop_token
   26        | include_exp stop_token
   27        | do_while_block stop_token

   28 top_exp: eq_number

   29 eq_number: call_number
   30          | call_number EQ eq_number
   31          | call_number AADD eq_number
   32          | call_number ASUB eq_number
   33          | call_number AMUL eq_number
   34          | call_number ADIV eq_number
   35          | call_number AMOD eq_number
   36          | call_number AINTDIV eq_number
   37          | call_number APOW eq_number
   38          | call_number FADD
   39          | FADD call_number
   40          | call_number FSUB
   41          | FSUB call_number

   42 formal_parameter: top_exp
   43                 | MUL top_exp
   44                 | POW top_exp
   45                 | top_exp EQ top_exp
   46                 | formal_parameter COMMA top_exp
   47                 | formal_parameter COMMA MUL top_exp
   48                 | formal_parameter COMMA POW top_exp
   49                 | formal_parameter COMMA top_exp EQ top_exp

   50 arguments: top_exp
   51          | arguments COMMA top_exp
   52          | base_var_ EQ top_exp
   53          | arguments COMMA base_var_ EQ top_exp
   54          | MUL top_exp
   55          | arguments COMMA MUL top_exp
   56          | POW top_exp
   57          | arguments COMMA POW top_exp

   58 slice_arguments: slice_arguments_token
   59                | slice_arguments slice_arguments_token
   60                | slice_arguments top_exp

   61 slice_arguments_token: top_exp COLON

   62 call_number: lambda_exp
   63            | call_number LB RB
   64            | call_number LB arguments RB

   65 lambda_exp: chose_exp
   66           | LB RB LAMBDA chose_exp
   67           | LB formal_parameter RB LAMBDA chose_exp

   68 chose_exp: bool_or
   69          | chose_exp IF chose_exp ELSE chose_exp

   70 bool_or: bool_and
   71        | bool_or OR bool_and

   72 bool_and: bool_not
   73         | bool_and AND bool_not

   74 bool_not: third_number
   75         | NOT third_number

   76 third_number: bit_or_not
   77             | third_number EQUAL bit_or_not
   78             | third_number MORE bit_or_not
   79             | third_number LESS bit_or_not
   80             | third_number MOREEQ bit_or_not
   81             | third_number LESSEQ bit_or_not
   82             | third_number NOTEQ bit_or_not

   83 bit_or_not: bit_or
   84           | bit_or_not BITNOTOR bit_or

   85 bit_or: bit_and
   86       | bit_or BITOR bit_and

   87 bit_and: bit_move
   88        | bit_and BITAND bit_move

   89 bit_move: second_number
   90         | bit_move BITRIGHT second_number
   91         | bit_move BITLEFT second_number

   92 second_number: first_number
   93              | second_number ADD first_number
   94              | second_number SUB first_number

   95 first_number: negative
   96             | first_number MUL negative
   97             | first_number DIV negative
   98             | first_number MOD negative
   99             | first_number INTDIV negative

  100 negative: bit_not
  101         | SUB bit_not

  102 bit_not: zero_number
  103        | BITNOT zero_number

  104 zero_number: attribute
  105            | zero_number POW attribute
  106            | zero_number LOG attribute
  107            | zero_number SQRT attribute

  108 attribute: call_down
  109          | attribute POINT call_down

  110 call_down: call_slice
  111          | call_slice LI top_exp RI

  112 call_slice: iter_value
  113           | call_slice LI slice_arguments RI

  114 iter_value: element
  115           | LI list_arguments RI
  116           | LP dict_arguments RP

  117 list_arguments: top_exp
  118               | list_arguments COMMA top_exp

  119 dict_arguments: element COLON element
  120               | dict_arguments COMMA element COLON element

  121 element: base_value
  122        | base_var_
  123        | LB top_exp RB

  124 base_value: NUMBER
  125           | INT
  126           | base_string
  127           | TRUE
  128           | FALSE
  129           | NULL_token

  130 base_var_: base_var_token
  131          | LI top_exp RI base_var_token

  132 base_var_token: VAR

  133 base_string: STRING
  134            | base_string STRING

  135 nonlocal_token: NONLOCAL base_var_token

  136 global_token: GLOBAL base_var_token

  137 default_token: DEFAULT base_var_token element

  138 return_exp: return_token
  139           | return_token top_exp
  140           | return_token top_exp element

  141 return_token: RETURN

  142 restarted_exp: restarted_token
  143              | restarted_token element

  144 restarted_token: RESTARTED

  145 restart_exp: restart_token
  146            | restart_token element

  147 restart_token: RESTART

  148 continued_exp: continued_token
  149              | continued_token element

  150 continued_token: CONTINUED

  151 continue_exp: continue_token
  152             | continue_token element

  153 continue_token: CONTINUE

  154 break_exp: break_token
  155          | break_token element

  156 break_token: BREAK

  157 broken_exp: broken_token
  158           | broken_token element

  159 broken_token: BROKEN

  160 if_block: if_exp block
  161         | if_block elif_exp block

  162 elif_exp: ELIF LB top_exp RB
  163         | ELSE

  164 if_exp: IF LB top_exp RB

  165 block_block: block_exp block

  166 block_exp: BLOCK

  167 for_block: for_exp block

  168 for_exp: FOR LB COMMA COMMA RB
  169        | FOR LB top_exp COMMA COMMA RB
  170        | FOR LB COMMA top_exp COMMA RB
  171        | FOR LB COMMA COMMA top_exp RB
  172        | FOR LB top_exp COMMA COMMA top_exp RB
  173        | FOR LB top_exp COMMA top_exp COMMA RB
  174        | FOR LB COMMA top_exp COMMA top_exp RB
  175        | FOR LB top_exp COMMA top_exp COMMA top_exp RB
  176        | FOR LB element IN top_exp RB

  177 include_exp: INCLUDE top_exp

  178 import_exp: IMPORT top_exp AS element

  179 raise_exp: RAISE top_exp top_exp
  180          | THROW top_exp
  181          | ASSERT top_exp top_exp

  182 try_block: try_exp block

  183 try_exp: try_token block EXCEPT AS element

  184 try_token: TRY

  185 do_while_block: DO block while_exp
  186               | DO block stop_token while_exp

  187 while_block: while_exp block

  188 while_exp: WHILE LB top_exp RB

  189 class_block: class_exp block

  190 class_exp: CLASS element LB RB
  191          | CLASS element LB arguments RB

  192 def_block: def_exp block

  193 def_exp: DEF element LB RB
  194        | DEF element LB formal_parameter RB

  195 block: LP command_list RP
  196      | LP block RP
  197      | LP PASS RP

  198 stop_token: STOPN
  199           | STOPF
  200           | stop_token STOPF
  201           | stop_token STOPN


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    NUMBER <double_value> (258) 124
    INT <double_value> (259) 125
    STRING <string_value> (260) 133 134
    VAR <string_value> (261) 132
    ADD (262) 93
    SUB (263) 94 101
    DIV (264) 97
    MUL (265) 43 47 54 55 96
    EQ (266) 30 45 49 52 53
    LESS (267) 79
    MORE (268) 78
    RB (269) 63 64 66 67 123 162 164 168 169 170 171 172 173 174 175 176 188 190 191 193 194
    LB (270) 63 64 66 67 123 162 164 168 169 170 171 172 173 174 175 176 188 190 191 193 194
    RP (271) 116 195 196 197
    LP (272) 116 195 196 197
    WHILE (273) 188
    POW (274) 44 48 56 57 105
    LOG (275) 106
    SQRT (276) 107
    EQUAL (277) 77
    MOREEQ (278) 80
    LESSEQ (279) 81
    NOTEQ (280) 82
    BREAK (281) 156
    IF (282) 69 164
    ELSE (283) 69 163
    ELIF (284) 162
    BROKEN (285) 159
    CONTINUE (286) 153
    CONTINUED (287) 150
    RESTART (288) 147
    RESTARTED (289) 144
    REGO (290) 13
    REWENT (291) 14
    RI (292) 111 113 115 131
    LI (293) 111 113 115 131
    DEFAULT (294) 137
    FOR (295) 168 169 170 171 172 173 174 175 176
    COMMA (296) 46 47 48 49 51 53 55 57 118 120 168 169 170 171 172 173 174 175
    GLOBAL (297) 136
    NONLOCAL (298) 135
    INDENTA (299)
    STOPN (300) 198 201
    STOPF (301) 199 200
    BLOCK (302) 166
    FALSE (303) 128
    TRUE (304) 127
    NULL_token (305) 129
    DEF (306) 193 194
    RETURN (307) 141
    CLASS (308) 190 191
    POINT (309) 109
    COLON (310) 61 119 120
    TRY (311) 184
    EXCEPT (312) 183
    AS (313) 178 183
    RAISE (314) 179
    THROW (315) 180
    IMPORT (316) 178
    INCLUDE (317) 177
    IN (318) 176
    AND (319) 73
    OR (320) 71
    NOT (321) 75
    MOD (322) 98
    INTDIV (323) 99
    AADD (324) 31
    ASUB (325) 32
    AMUL (326) 33
    ADIV (327) 34
    AMOD (328) 35
    AINTDIV (329) 36
    FADD (330) 38 39
    FSUB (331) 40 41
    APOW (332) 37
    BITAND (333) 88
    BITOR (334) 86
    BITNOT (335) 103
    BITNOTOR (336) 84
    BITRIGHT (337) 90
    BITLEFT (338) 91
    PASS (339) 197
    DO (340) 185 186
    LAMBDA (341) 66 67
    ASSERT (342) 181


非终结语词，附有它们出现处的规则

    $accept (88)
        on left: 0
    command_block (89)
        on left: 1
        on right: 0
    command_list (90)
        on left: 2 3
        on right: 1 3 195
    command <statement_value> (91)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 2 3
    top_exp <statement_value> (92)
        on left: 28
        on right: 4 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 60 61 111 117 118 123 131 139 140 162 164 169 170 171 172 173 174 175 176 177 178 179 180 181 188
    eq_number <statement_value> (93)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 28 30 31 32 33 34 35 36 37
    formal_parameter <parameter_list> (94)
        on left: 42 43 44 45 46 47 48 49
        on right: 46 47 48 49 67 194
    arguments <parameter_list> (95)
        on left: 50 51 52 53 54 55 56 57
        on right: 51 53 55 57 64 191
    slice_arguments <parameter_list> (96)
        on left: 58 59 60
        on right: 59 60 113
    slice_arguments_token <statement_value> (97)
        on left: 61
        on right: 58 59
    call_number <statement_value> (98)
        on left: 62 63 64
        on right: 29 30 31 32 33 34 35 36 37 38 39 40 41 63 64
    lambda_exp <statement_value> (99)
        on left: 65 66 67
        on right: 62
    chose_exp <statement_value> (100)
        on left: 68 69
        on right: 65 66 67 69
    bool_or <statement_value> (101)
        on left: 70 71
        on right: 68 71
    bool_and <statement_value> (102)
        on left: 72 73
        on right: 70 71 73
    bool_not <statement_value> (103)
        on left: 74 75
        on right: 72 73
    third_number <statement_value> (104)
        on left: 76 77 78 79 80 81 82
        on right: 74 75 77 78 79 80 81 82
    bit_or_not <statement_value> (105)
        on left: 83 84
        on right: 76 77 78 79 80 81 82 84
    bit_or <statement_value> (106)
        on left: 85 86
        on right: 83 84 86
    bit_and <statement_value> (107)
        on left: 87 88
        on right: 85 86 88
    bit_move <statement_value> (108)
        on left: 89 90 91
        on right: 87 88 90 91
    second_number <statement_value> (109)
        on left: 92 93 94
        on right: 89 90 91 93 94
    first_number <statement_value> (110)
        on left: 95 96 97 98 99
        on right: 92 93 94 96 97 98 99
    negative <statement_value> (111)
        on left: 100 101
        on right: 95 96 97 98 99
    bit_not <statement_value> (112)
        on left: 102 103
        on right: 100 101
    zero_number <statement_value> (113)
        on left: 104 105 106 107
        on right: 102 103 105 106 107
    attribute <statement_value> (114)
        on left: 108 109
        on right: 104 105 106 107 109
    call_down <statement_value> (115)
        on left: 110 111
        on right: 108 109
    call_slice <statement_value> (116)
        on left: 112 113
        on right: 110 111 113
    iter_value <statement_value> (117)
        on left: 114 115 116
        on right: 112
    list_arguments <parameter_list> (118)
        on left: 117 118
        on right: 115 118
    dict_arguments <parameter_list> (119)
        on left: 119 120
        on right: 116 120
    element <statement_value> (120)
        on left: 121 122 123
        on right: 114 119 120 137 140 143 146 149 152 155 158 176 178 183 190 191 193 194
    base_value <statement_value> (121)
        on left: 124 125 126 127 128 129
        on right: 121
    base_var_ <statement_value> (122)
        on left: 130 131
        on right: 52 53 122
    base_var_token <statement_value> (123)
        on left: 132
        on right: 130 131 135 136 137
    base_string <string_value> (124)
        on left: 133 134
        on right: 126 134
    nonlocal_token <statement_value> (125)
        on left: 135
        on right: 18
    global_token <statement_value> (126)
        on left: 136
        on right: 16
    default_token <statement_value> (127)
        on left: 137
        on right: 15
    return_exp <statement_value> (128)
        on left: 138 139 140
        on right: 21
    return_token <statement_value> (129)
        on left: 141
        on right: 138 139 140
    restarted_exp <statement_value> (130)
        on left: 142 143
        on right: 12
    restarted_token <statement_value> (131)
        on left: 144
        on right: 142 143
    restart_exp <statement_value> (132)
        on left: 145 146
        on right: 11
    restart_token <statement_value> (133)
        on left: 147
        on right: 145 146
    continued_exp <statement_value> (134)
        on left: 148 149
        on right: 10
    continued_token <statement_value> (135)
        on left: 150
        on right: 148 149
    continue_exp <statement_value> (136)
        on left: 151 152
        on right: 9
    continue_token <statement_value> (137)
        on left: 153
        on right: 151 152
    break_exp <statement_value> (138)
        on left: 154 155
        on right: 7
    break_token <statement_value> (139)
        on left: 156
        on right: 154 155
    broken_exp <statement_value> (140)
        on left: 157 158
        on right: 8
    broken_token <statement_value> (141)
        on left: 159
        on right: 157 158
    if_block <statement_value> (142)
        on left: 160 161
        on right: 6 161
    elif_exp <if_list_base> (143)
        on left: 162 163
        on right: 161
    if_exp <statement_value> (144)
        on left: 164
        on right: 160
    block_block <statement_value> (145)
        on left: 165
        on right: 19
    block_exp <statement_value> (146)
        on left: 166
        on right: 165
    for_block <statement_value> (147)
        on left: 167
        on right: 17
    for_exp <statement_value> (148)
        on left: 168 169 170 171 172 173 174 175 176
        on right: 167
    include_exp <statement_value> (149)
        on left: 177
        on right: 26
    import_exp <statement_value> (150)
        on left: 178
        on right: 25
    raise_exp <statement_value> (151)
        on left: 179 180 181
        on right: 24
    try_block <statement_value> (152)
        on left: 182
        on right: 23
    try_exp <statement_value> (153)
        on left: 183
        on right: 182
    try_token <statement_value> (154)
        on left: 184
        on right: 183
    do_while_block <statement_value> (155)
        on left: 185 186
        on right: 27
    while_block <statement_value> (156)
        on left: 187
        on right: 5
    while_exp <statement_value> (157)
        on left: 188
        on right: 185 186 187
    class_block <statement_value> (158)
        on left: 189
        on right: 22
    class_exp <statement_value> (159)
        on left: 190 191
        on right: 189
    def_block <statement_value> (160)
        on left: 192
        on right: 20
    def_exp <statement_value> (161)
        on left: 193 194
        on right: 192
    block (162)
        on left: 195 196 197
        on right: 160 161 165 167 182 183 185 186 187 189 192 196
    stop_token (163)
        on left: 198 199 200 201
        on right: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 186 200 201


状态 0

    0 $accept: . command_block $end

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    WHILE       偏移，并进入状态 8
    BREAK       偏移，并进入状态 9
    IF          偏移，并进入状态 10
    BROKEN      偏移，并进入状态 11
    CONTINUE    偏移，并进入状态 12
    CONTINUED   偏移，并进入状态 13
    RESTART     偏移，并进入状态 14
    RESTARTED   偏移，并进入状态 15
    REGO        偏移，并进入状态 16
    REWENT      偏移，并进入状态 17
    LI          偏移，并进入状态 18
    DEFAULT     偏移，并进入状态 19
    FOR         偏移，并进入状态 20
    GLOBAL      偏移，并进入状态 21
    NONLOCAL    偏移，并进入状态 22
    BLOCK       偏移，并进入状态 23
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    DEF         偏移，并进入状态 27
    RETURN      偏移，并进入状态 28
    CLASS       偏移，并进入状态 29
    TRY         偏移，并进入状态 30
    RAISE       偏移，并进入状态 31
    THROW       偏移，并进入状态 32
    IMPORT      偏移，并进入状态 33
    INCLUDE     偏移，并进入状态 34
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38
    DO          偏移，并进入状态 39
    ASSERT      偏移，并进入状态 40

    command_block    转到状态 41
    command_list     转到状态 42
    command          转到状态 43
    top_exp          转到状态 44
    eq_number        转到状态 45
    call_number      转到状态 46
    lambda_exp       转到状态 47
    chose_exp        转到状态 48
    bool_or          转到状态 49
    bool_and         转到状态 50
    bool_not         转到状态 51
    third_number     转到状态 52
    bit_or_not       转到状态 53
    bit_or           转到状态 54
    bit_and          转到状态 55
    bit_move         转到状态 56
    second_number    转到状态 57
    first_number     转到状态 58
    negative         转到状态 59
    bit_not          转到状态 60
    zero_number      转到状态 61
    attribute        转到状态 62
    call_down        转到状态 63
    call_slice       转到状态 64
    iter_value       转到状态 65
    element          转到状态 66
    base_value       转到状态 67
    base_var_        转到状态 68
    base_var_token   转到状态 69
    base_string      转到状态 70
    nonlocal_token   转到状态 71
    global_token     转到状态 72
    default_token    转到状态 73
    return_exp       转到状态 74
    return_token     转到状态 75
    restarted_exp    转到状态 76
    restarted_token  转到状态 77
    restart_exp      转到状态 78
    restart_token    转到状态 79
    continued_exp    转到状态 80
    continued_token  转到状态 81
    continue_exp     转到状态 82
    continue_token   转到状态 83
    break_exp        转到状态 84
    break_token      转到状态 85
    broken_exp       转到状态 86
    broken_token     转到状态 87
    if_block         转到状态 88
    if_exp           转到状态 89
    block_block      转到状态 90
    block_exp        转到状态 91
    for_block        转到状态 92
    for_exp          转到状态 93
    include_exp      转到状态 94
    import_exp       转到状态 95
    raise_exp        转到状态 96
    try_block        转到状态 97
    try_exp          转到状态 98
    try_token        转到状态 99
    do_while_block   转到状态 100
    while_block      转到状态 101
    while_exp        转到状态 102
    class_block      转到状态 103
    class_exp        转到状态 104
    def_block        转到状态 105
    def_exp          转到状态 106


状态 1

  124 base_value: NUMBER .

    $default  使用规则 124 以归约 (base_value)


状态 2

  125 base_value: INT .

    $default  使用规则 125 以归约 (base_value)


状态 3

  133 base_string: STRING .

    $default  使用规则 133 以归约 (base_string)


状态 4

  132 base_var_token: VAR .

    $default  使用规则 132 以归约 (base_var_token)


状态 5

  101 negative: SUB . bit_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_not         转到状态 108
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 6

   66 lambda_exp: LB . RB LAMBDA chose_exp
   67           | LB . formal_parameter RB LAMBDA chose_exp
  123 element: LB . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    MUL         偏移，并进入状态 109
    RB          偏移，并进入状态 110
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    POW         偏移，并进入状态 111
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp           转到状态 112
    eq_number         转到状态 45
    formal_parameter  转到状态 113
    call_number       转到状态 46
    lambda_exp        转到状态 47
    chose_exp         转到状态 48
    bool_or           转到状态 49
    bool_and          转到状态 50
    bool_not          转到状态 51
    third_number      转到状态 52
    bit_or_not        转到状态 53
    bit_or            转到状态 54
    bit_and           转到状态 55
    bit_move          转到状态 56
    second_number     转到状态 57
    first_number      转到状态 58
    negative          转到状态 59
    bit_not           转到状态 60
    zero_number       转到状态 61
    attribute         转到状态 62
    call_down         转到状态 63
    call_slice        转到状态 64
    iter_value        转到状态 65
    element           转到状态 66
    base_value        转到状态 67
    base_var_         转到状态 68
    base_var_token    转到状态 69
    base_string       转到状态 70


状态 7

  116 iter_value: LP . dict_arguments RP

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    dict_arguments  转到状态 115
    element         转到状态 116
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 8

  188 while_exp: WHILE . LB top_exp RB

    LB  偏移，并进入状态 117


状态 9

  156 break_token: BREAK .

    $default  使用规则 156 以归约 (break_token)


状态 10

  164 if_exp: IF . LB top_exp RB

    LB  偏移，并进入状态 118


状态 11

  159 broken_token: BROKEN .

    $default  使用规则 159 以归约 (broken_token)


状态 12

  153 continue_token: CONTINUE .

    $default  使用规则 153 以归约 (continue_token)


状态 13

  150 continued_token: CONTINUED .

    $default  使用规则 150 以归约 (continued_token)


状态 14

  147 restart_token: RESTART .

    $default  使用规则 147 以归约 (restart_token)


状态 15

  144 restarted_token: RESTARTED .

    $default  使用规则 144 以归约 (restarted_token)


状态 16

   13 command: REGO . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 121


状态 17

   14 command: REWENT . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 122


状态 18

  115 iter_value: LI . list_arguments RI
  131 base_var_: LI . top_exp RI base_var_token

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 123
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    list_arguments  转到状态 124
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 19

  137 default_token: DEFAULT . base_var_token element

    VAR  偏移，并进入状态 4

    base_var_token  转到状态 125


状态 20

  168 for_exp: FOR . LB COMMA COMMA RB
  169        | FOR . LB top_exp COMMA COMMA RB
  170        | FOR . LB COMMA top_exp COMMA RB
  171        | FOR . LB COMMA COMMA top_exp RB
  172        | FOR . LB top_exp COMMA COMMA top_exp RB
  173        | FOR . LB top_exp COMMA top_exp COMMA RB
  174        | FOR . LB COMMA top_exp COMMA top_exp RB
  175        | FOR . LB top_exp COMMA top_exp COMMA top_exp RB
  176        | FOR . LB element IN top_exp RB

    LB  偏移，并进入状态 126


状态 21

  136 global_token: GLOBAL . base_var_token

    VAR  偏移，并进入状态 4

    base_var_token  转到状态 127


状态 22

  135 nonlocal_token: NONLOCAL . base_var_token

    VAR  偏移，并进入状态 4

    base_var_token  转到状态 128


状态 23

  166 block_exp: BLOCK .

    $default  使用规则 166 以归约 (block_exp)


状态 24

  128 base_value: FALSE .

    $default  使用规则 128 以归约 (base_value)


状态 25

  127 base_value: TRUE .

    $default  使用规则 127 以归约 (base_value)


状态 26

  129 base_value: NULL_token .

    $default  使用规则 129 以归约 (base_value)


状态 27

  193 def_exp: DEF . element LB RB
  194        | DEF . element LB formal_parameter RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 129
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 28

  141 return_token: RETURN .

    $default  使用规则 141 以归约 (return_token)


状态 29

  190 class_exp: CLASS . element LB RB
  191          | CLASS . element LB arguments RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 130
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 30

  184 try_token: TRY .

    $default  使用规则 184 以归约 (try_token)


状态 31

  179 raise_exp: RAISE . top_exp top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 131
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 32

  180 raise_exp: THROW . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 132
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 33

  178 import_exp: IMPORT . top_exp AS element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 133
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 34

  177 include_exp: INCLUDE . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 134
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 35

   75 bool_not: NOT . third_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    third_number    转到状态 135
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 36

   39 eq_number: FADD . call_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    call_number     转到状态 136
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 37

   41 eq_number: FSUB . call_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    call_number     转到状态 137
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 38

  103 bit_not: BITNOT . zero_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    zero_number     转到状态 138
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 39

  185 do_while_block: DO . block while_exp
  186               | DO . block stop_token while_exp

    LP  偏移，并进入状态 139

    block  转到状态 140


状态 40

  181 raise_exp: ASSERT . top_exp top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 141
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 41

    0 $accept: command_block . $end

    $end  偏移，并进入状态 142


状态 42

    1 command_block: command_list .
    3 command_list: command_list . command

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    WHILE       偏移，并进入状态 8
    BREAK       偏移，并进入状态 9
    IF          偏移，并进入状态 10
    BROKEN      偏移，并进入状态 11
    CONTINUE    偏移，并进入状态 12
    CONTINUED   偏移，并进入状态 13
    RESTART     偏移，并进入状态 14
    RESTARTED   偏移，并进入状态 15
    REGO        偏移，并进入状态 16
    REWENT      偏移，并进入状态 17
    LI          偏移，并进入状态 18
    DEFAULT     偏移，并进入状态 19
    FOR         偏移，并进入状态 20
    GLOBAL      偏移，并进入状态 21
    NONLOCAL    偏移，并进入状态 22
    BLOCK       偏移，并进入状态 23
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    DEF         偏移，并进入状态 27
    RETURN      偏移，并进入状态 28
    CLASS       偏移，并进入状态 29
    TRY         偏移，并进入状态 30
    RAISE       偏移，并进入状态 31
    THROW       偏移，并进入状态 32
    IMPORT      偏移，并进入状态 33
    INCLUDE     偏移，并进入状态 34
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38
    DO          偏移，并进入状态 39
    ASSERT      偏移，并进入状态 40

    $default  使用规则 1 以归约 (command_block)

    command          转到状态 143
    top_exp          转到状态 44
    eq_number        转到状态 45
    call_number      转到状态 46
    lambda_exp       转到状态 47
    chose_exp        转到状态 48
    bool_or          转到状态 49
    bool_and         转到状态 50
    bool_not         转到状态 51
    third_number     转到状态 52
    bit_or_not       转到状态 53
    bit_or           转到状态 54
    bit_and          转到状态 55
    bit_move         转到状态 56
    second_number    转到状态 57
    first_number     转到状态 58
    negative         转到状态 59
    bit_not          转到状态 60
    zero_number      转到状态 61
    attribute        转到状态 62
    call_down        转到状态 63
    call_slice       转到状态 64
    iter_value       转到状态 65
    element          转到状态 66
    base_value       转到状态 67
    base_var_        转到状态 68
    base_var_token   转到状态 69
    base_string      转到状态 70
    nonlocal_token   转到状态 71
    global_token     转到状态 72
    default_token    转到状态 73
    return_exp       转到状态 74
    return_token     转到状态 75
    restarted_exp    转到状态 76
    restarted_token  转到状态 77
    restart_exp      转到状态 78
    restart_token    转到状态 79
    continued_exp    转到状态 80
    continued_token  转到状态 81
    continue_exp     转到状态 82
    continue_token   转到状态 83
    break_exp        转到状态 84
    break_token      转到状态 85
    broken_exp       转到状态 86
    broken_token     转到状态 87
    if_block         转到状态 88
    if_exp           转到状态 89
    block_block      转到状态 90
    block_exp        转到状态 91
    for_block        转到状态 92
    for_exp          转到状态 93
    include_exp      转到状态 94
    import_exp       转到状态 95
    raise_exp        转到状态 96
    try_block        转到状态 97
    try_exp          转到状态 98
    try_token        转到状态 99
    do_while_block   转到状态 100
    while_block      转到状态 101
    while_exp        转到状态 102
    class_block      转到状态 103
    class_exp        转到状态 104
    def_block        转到状态 105
    def_exp          转到状态 106


状态 43

    2 command_list: command .

    $default  使用规则 2 以归约 (command_list)


状态 44

    4 command: top_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 144


状态 45

   28 top_exp: eq_number .

    $default  使用规则 28 以归约 (top_exp)


状态 46

   29 eq_number: call_number .
   30          | call_number . EQ eq_number
   31          | call_number . AADD eq_number
   32          | call_number . ASUB eq_number
   33          | call_number . AMUL eq_number
   34          | call_number . ADIV eq_number
   35          | call_number . AMOD eq_number
   36          | call_number . AINTDIV eq_number
   37          | call_number . APOW eq_number
   38          | call_number . FADD
   40          | call_number . FSUB
   63 call_number: call_number . LB RB
   64            | call_number . LB arguments RB

    EQ       偏移，并进入状态 145
    LB       偏移，并进入状态 146
    AADD     偏移，并进入状态 147
    ASUB     偏移，并进入状态 148
    AMUL     偏移，并进入状态 149
    ADIV     偏移，并进入状态 150
    AMOD     偏移，并进入状态 151
    AINTDIV  偏移，并进入状态 152
    FADD     偏移，并进入状态 153
    FSUB     偏移，并进入状态 154
    APOW     偏移，并进入状态 155

    EQ        [使用规则 29 以归约 (eq_number)]
    LB        [使用规则 29 以归约 (eq_number)]
    FADD      [使用规则 29 以归约 (eq_number)]
    FSUB      [使用规则 29 以归约 (eq_number)]
    $default  使用规则 29 以归约 (eq_number)


状态 47

   62 call_number: lambda_exp .

    $default  使用规则 62 以归约 (call_number)


状态 48

   65 lambda_exp: chose_exp .
   69 chose_exp: chose_exp . IF chose_exp ELSE chose_exp

    IF  偏移，并进入状态 156

    $default  使用规则 65 以归约 (lambda_exp)


状态 49

   68 chose_exp: bool_or .
   71 bool_or: bool_or . OR bool_and

    OR  偏移，并进入状态 157

    $default  使用规则 68 以归约 (chose_exp)


状态 50

   70 bool_or: bool_and .
   73 bool_and: bool_and . AND bool_not

    AND  偏移，并进入状态 158

    $default  使用规则 70 以归约 (bool_or)


状态 51

   72 bool_and: bool_not .

    $default  使用规则 72 以归约 (bool_and)


状态 52

   74 bool_not: third_number .
   77 third_number: third_number . EQUAL bit_or_not
   78             | third_number . MORE bit_or_not
   79             | third_number . LESS bit_or_not
   80             | third_number . MOREEQ bit_or_not
   81             | third_number . LESSEQ bit_or_not
   82             | third_number . NOTEQ bit_or_not

    LESS    偏移，并进入状态 159
    MORE    偏移，并进入状态 160
    EQUAL   偏移，并进入状态 161
    MOREEQ  偏移，并进入状态 162
    LESSEQ  偏移，并进入状态 163
    NOTEQ   偏移，并进入状态 164

    $default  使用规则 74 以归约 (bool_not)


状态 53

   76 third_number: bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 76 以归约 (third_number)


状态 54

   83 bit_or_not: bit_or .
   86 bit_or: bit_or . BITOR bit_and

    BITOR  偏移，并进入状态 166

    $default  使用规则 83 以归约 (bit_or_not)


状态 55

   85 bit_or: bit_and .
   88 bit_and: bit_and . BITAND bit_move

    BITAND  偏移，并进入状态 167

    $default  使用规则 85 以归约 (bit_or)


状态 56

   87 bit_and: bit_move .
   90 bit_move: bit_move . BITRIGHT second_number
   91         | bit_move . BITLEFT second_number

    BITRIGHT  偏移，并进入状态 168
    BITLEFT   偏移，并进入状态 169

    $default  使用规则 87 以归约 (bit_and)


状态 57

   89 bit_move: second_number .
   93 second_number: second_number . ADD first_number
   94              | second_number . SUB first_number

    ADD  偏移，并进入状态 170
    SUB  偏移，并进入状态 171

    SUB       [使用规则 89 以归约 (bit_move)]
    $default  使用规则 89 以归约 (bit_move)


状态 58

   92 second_number: first_number .
   96 first_number: first_number . MUL negative
   97             | first_number . DIV negative
   98             | first_number . MOD negative
   99             | first_number . INTDIV negative

    DIV     偏移，并进入状态 172
    MUL     偏移，并进入状态 173
    MOD     偏移，并进入状态 174
    INTDIV  偏移，并进入状态 175

    $default  使用规则 92 以归约 (second_number)


状态 59

   95 first_number: negative .

    $default  使用规则 95 以归约 (first_number)


状态 60

  100 negative: bit_not .

    $default  使用规则 100 以归约 (negative)


状态 61

  102 bit_not: zero_number .
  105 zero_number: zero_number . POW attribute
  106            | zero_number . LOG attribute
  107            | zero_number . SQRT attribute

    POW   偏移，并进入状态 176
    LOG   偏移，并进入状态 177
    SQRT  偏移，并进入状态 178

    $default  使用规则 102 以归约 (bit_not)


状态 62

  104 zero_number: attribute .
  109 attribute: attribute . POINT call_down

    POINT  偏移，并进入状态 179

    $default  使用规则 104 以归约 (zero_number)


状态 63

  108 attribute: call_down .

    $default  使用规则 108 以归约 (attribute)


状态 64

  110 call_down: call_slice .
  111          | call_slice . LI top_exp RI
  113 call_slice: call_slice . LI slice_arguments RI

    LI  偏移，并进入状态 180

    LI        [使用规则 110 以归约 (call_down)]
    $default  使用规则 110 以归约 (call_down)


状态 65

  112 call_slice: iter_value .

    $default  使用规则 112 以归约 (call_slice)


状态 66

  114 iter_value: element .

    $default  使用规则 114 以归约 (iter_value)


状态 67

  121 element: base_value .

    $default  使用规则 121 以归约 (element)


状态 68

  122 element: base_var_ .

    $default  使用规则 122 以归约 (element)


状态 69

  130 base_var_: base_var_token .

    $default  使用规则 130 以归约 (base_var_)


状态 70

  126 base_value: base_string .
  134 base_string: base_string . STRING

    STRING  偏移，并进入状态 181

    STRING    [使用规则 126 以归约 (base_value)]
    $default  使用规则 126 以归约 (base_value)


状态 71

   18 command: nonlocal_token . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 182


状态 72

   16 command: global_token . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 183


状态 73

   15 command: default_token . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 184


状态 74

   21 command: return_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 185


状态 75

  138 return_exp: return_token .
  139           | return_token . top_exp
  140           | return_token . top_exp element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    $default  使用规则 138 以归约 (return_exp)

    top_exp         转到状态 186
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 76

   12 command: restarted_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 187


状态 77

  142 restarted_exp: restarted_token .
  143              | restarted_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 142 以归约 (restarted_exp)

    element         转到状态 188
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 78

   11 command: restart_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 189


状态 79

  145 restart_exp: restart_token .
  146            | restart_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 145 以归约 (restart_exp)

    element         转到状态 190
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 80

   10 command: continued_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 191


状态 81

  148 continued_exp: continued_token .
  149              | continued_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 148 以归约 (continued_exp)

    element         转到状态 192
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 82

    9 command: continue_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 193


状态 83

  151 continue_exp: continue_token .
  152             | continue_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 151 以归约 (continue_exp)

    element         转到状态 194
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 84

    7 command: break_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 195


状态 85

  154 break_exp: break_token .
  155          | break_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 154 以归约 (break_exp)

    element         转到状态 196
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 86

    8 command: broken_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 197


状态 87

  157 broken_exp: broken_token .
  158           | broken_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 157 以归约 (broken_exp)

    element         转到状态 198
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 88

    6 command: if_block . stop_token
  161 if_block: if_block . elif_exp block

    ELSE   偏移，并进入状态 199
    ELIF   偏移，并进入状态 200
    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    elif_exp    转到状态 201
    stop_token  转到状态 202


状态 89

  160 if_block: if_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 203


状态 90

   19 command: block_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 204


状态 91

  165 block_block: block_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 205


状态 92

   17 command: for_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 206


状态 93

  167 for_block: for_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 207


状态 94

   26 command: include_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 208


状态 95

   25 command: import_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 209


状态 96

   24 command: raise_exp . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 210


状态 97

   23 command: try_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 211


状态 98

  182 try_block: try_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 212


状态 99

  183 try_exp: try_token . block EXCEPT AS element

    LP  偏移，并进入状态 139

    block  转到状态 213


状态 100

   27 command: do_while_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 214


状态 101

    5 command: while_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 215


状态 102

  187 while_block: while_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 216


状态 103

   22 command: class_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 217


状态 104

  189 class_block: class_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 218


状态 105

   20 command: def_block . stop_token

    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    stop_token  转到状态 219


状态 106

  192 def_block: def_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 220


状态 107

  123 element: LB . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 221
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 108

  101 negative: SUB bit_not .

    $default  使用规则 101 以归约 (negative)


状态 109

   43 formal_parameter: MUL . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 222
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 110

   66 lambda_exp: LB RB . LAMBDA chose_exp

    LAMBDA  偏移，并进入状态 223


状态 111

   44 formal_parameter: POW . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 224
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 112

   42 formal_parameter: top_exp .
   45                 | top_exp . EQ top_exp
  123 element: LB top_exp . RB

    EQ  偏移，并进入状态 225
    RB  偏移，并进入状态 226

    RB        [使用规则 42 以归约 (formal_parameter)]
    $default  使用规则 42 以归约 (formal_parameter)


状态 113

   46 formal_parameter: formal_parameter . COMMA top_exp
   47                 | formal_parameter . COMMA MUL top_exp
   48                 | formal_parameter . COMMA POW top_exp
   49                 | formal_parameter . COMMA top_exp EQ top_exp
   67 lambda_exp: LB formal_parameter . RB LAMBDA chose_exp

    RB     偏移，并进入状态 227
    COMMA  偏移，并进入状态 228


状态 114

  131 base_var_: LI . top_exp RI base_var_token

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 229
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 115

  116 iter_value: LP dict_arguments . RP
  120 dict_arguments: dict_arguments . COMMA element COLON element

    RP     偏移，并进入状态 230
    COMMA  偏移，并进入状态 231


状态 116

  119 dict_arguments: element . COLON element

    COLON  偏移，并进入状态 232


状态 117

  188 while_exp: WHILE LB . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 233
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 118

  164 if_exp: IF LB . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 234
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 119

  198 stop_token: STOPN .

    $default  使用规则 198 以归约 (stop_token)


状态 120

  199 stop_token: STOPF .

    $default  使用规则 199 以归约 (stop_token)


状态 121

   13 command: REGO stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 13 以归约 (command)


状态 122

   14 command: REWENT stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 14 以归约 (command)


状态 123

  117 list_arguments: top_exp .
  131 base_var_: LI top_exp . RI base_var_token

    RI  偏移，并进入状态 237

    RI        [使用规则 117 以归约 (list_arguments)]
    $default  使用规则 117 以归约 (list_arguments)


状态 124

  115 iter_value: LI list_arguments . RI
  118 list_arguments: list_arguments . COMMA top_exp

    RI     偏移，并进入状态 238
    COMMA  偏移，并进入状态 239


状态 125

  137 default_token: DEFAULT base_var_token . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 240
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 126

  168 for_exp: FOR LB . COMMA COMMA RB
  169        | FOR LB . top_exp COMMA COMMA RB
  170        | FOR LB . COMMA top_exp COMMA RB
  171        | FOR LB . COMMA COMMA top_exp RB
  172        | FOR LB . top_exp COMMA COMMA top_exp RB
  173        | FOR LB . top_exp COMMA top_exp COMMA RB
  174        | FOR LB . COMMA top_exp COMMA top_exp RB
  175        | FOR LB . top_exp COMMA top_exp COMMA top_exp RB
  176        | FOR LB . element IN top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    COMMA       偏移，并进入状态 241
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 242
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 243
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 127

  136 global_token: GLOBAL base_var_token .

    $default  使用规则 136 以归约 (global_token)


状态 128

  135 nonlocal_token: NONLOCAL base_var_token .

    $default  使用规则 135 以归约 (nonlocal_token)


状态 129

  193 def_exp: DEF element . LB RB
  194        | DEF element . LB formal_parameter RB

    LB  偏移，并进入状态 244


状态 130

  190 class_exp: CLASS element . LB RB
  191          | CLASS element . LB arguments RB

    LB  偏移，并进入状态 245


状态 131

  179 raise_exp: RAISE top_exp . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 246
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 132

  180 raise_exp: THROW top_exp .

    $default  使用规则 180 以归约 (raise_exp)


状态 133

  178 import_exp: IMPORT top_exp . AS element

    AS  偏移，并进入状态 247


状态 134

  177 include_exp: INCLUDE top_exp .

    $default  使用规则 177 以归约 (include_exp)


状态 135

   75 bool_not: NOT third_number .
   77 third_number: third_number . EQUAL bit_or_not
   78             | third_number . MORE bit_or_not
   79             | third_number . LESS bit_or_not
   80             | third_number . MOREEQ bit_or_not
   81             | third_number . LESSEQ bit_or_not
   82             | third_number . NOTEQ bit_or_not

    LESS    偏移，并进入状态 159
    MORE    偏移，并进入状态 160
    EQUAL   偏移，并进入状态 161
    MOREEQ  偏移，并进入状态 162
    LESSEQ  偏移，并进入状态 163
    NOTEQ   偏移，并进入状态 164

    $default  使用规则 75 以归约 (bool_not)


状态 136

   39 eq_number: FADD call_number .
   63 call_number: call_number . LB RB
   64            | call_number . LB arguments RB

    LB  偏移，并进入状态 146

    LB        [使用规则 39 以归约 (eq_number)]
    $default  使用规则 39 以归约 (eq_number)


状态 137

   41 eq_number: FSUB call_number .
   63 call_number: call_number . LB RB
   64            | call_number . LB arguments RB

    LB  偏移，并进入状态 146

    LB        [使用规则 41 以归约 (eq_number)]
    $default  使用规则 41 以归约 (eq_number)


状态 138

  103 bit_not: BITNOT zero_number .
  105 zero_number: zero_number . POW attribute
  106            | zero_number . LOG attribute
  107            | zero_number . SQRT attribute

    POW   偏移，并进入状态 176
    LOG   偏移，并进入状态 177
    SQRT  偏移，并进入状态 178

    $default  使用规则 103 以归约 (bit_not)


状态 139

  195 block: LP . command_list RP
  196      | LP . block RP
  197      | LP . PASS RP

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 248
    WHILE       偏移，并进入状态 8
    BREAK       偏移，并进入状态 9
    IF          偏移，并进入状态 10
    BROKEN      偏移，并进入状态 11
    CONTINUE    偏移，并进入状态 12
    CONTINUED   偏移，并进入状态 13
    RESTART     偏移，并进入状态 14
    RESTARTED   偏移，并进入状态 15
    REGO        偏移，并进入状态 16
    REWENT      偏移，并进入状态 17
    LI          偏移，并进入状态 18
    DEFAULT     偏移，并进入状态 19
    FOR         偏移，并进入状态 20
    GLOBAL      偏移，并进入状态 21
    NONLOCAL    偏移，并进入状态 22
    BLOCK       偏移，并进入状态 23
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    DEF         偏移，并进入状态 27
    RETURN      偏移，并进入状态 28
    CLASS       偏移，并进入状态 29
    TRY         偏移，并进入状态 30
    RAISE       偏移，并进入状态 31
    THROW       偏移，并进入状态 32
    IMPORT      偏移，并进入状态 33
    INCLUDE     偏移，并进入状态 34
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38
    PASS        偏移，并进入状态 249
    DO          偏移，并进入状态 39
    ASSERT      偏移，并进入状态 40

    command_list     转到状态 250
    command          转到状态 43
    top_exp          转到状态 44
    eq_number        转到状态 45
    call_number      转到状态 46
    lambda_exp       转到状态 47
    chose_exp        转到状态 48
    bool_or          转到状态 49
    bool_and         转到状态 50
    bool_not         转到状态 51
    third_number     转到状态 52
    bit_or_not       转到状态 53
    bit_or           转到状态 54
    bit_and          转到状态 55
    bit_move         转到状态 56
    second_number    转到状态 57
    first_number     转到状态 58
    negative         转到状态 59
    bit_not          转到状态 60
    zero_number      转到状态 61
    attribute        转到状态 62
    call_down        转到状态 63
    call_slice       转到状态 64
    iter_value       转到状态 65
    element          转到状态 66
    base_value       转到状态 67
    base_var_        转到状态 68
    base_var_token   转到状态 69
    base_string      转到状态 70
    nonlocal_token   转到状态 71
    global_token     转到状态 72
    default_token    转到状态 73
    return_exp       转到状态 74
    return_token     转到状态 75
    restarted_exp    转到状态 76
    restarted_token  转到状态 77
    restart_exp      转到状态 78
    restart_token    转到状态 79
    continued_exp    转到状态 80
    continued_token  转到状态 81
    continue_exp     转到状态 82
    continue_token   转到状态 83
    break_exp        转到状态 84
    break_token      转到状态 85
    broken_exp       转到状态 86
    broken_token     转到状态 87
    if_block         转到状态 88
    if_exp           转到状态 89
    block_block      转到状态 90
    block_exp        转到状态 91
    for_block        转到状态 92
    for_exp          转到状态 93
    include_exp      转到状态 94
    import_exp       转到状态 95
    raise_exp        转到状态 96
    try_block        转到状态 97
    try_exp          转到状态 98
    try_token        转到状态 99
    do_while_block   转到状态 100
    while_block      转到状态 101
    while_exp        转到状态 102
    class_block      转到状态 103
    class_exp        转到状态 104
    def_block        转到状态 105
    def_exp          转到状态 106
    block            转到状态 251


状态 140

  185 do_while_block: DO block . while_exp
  186               | DO block . stop_token while_exp

    WHILE  偏移，并进入状态 8
    STOPN  偏移，并进入状态 119
    STOPF  偏移，并进入状态 120

    while_exp   转到状态 252
    stop_token  转到状态 253


状态 141

  181 raise_exp: ASSERT top_exp . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 254
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 142

    0 $accept: command_block $end .

    $default  接受


状态 143

    3 command_list: command_list command .

    $default  使用规则 3 以归约 (command_list)


状态 144

    4 command: top_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 4 以归约 (command)


状态 145

   30 eq_number: call_number EQ . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 255
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 146

   63 call_number: call_number LB . RB
   64            | call_number LB . arguments RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    MUL         偏移，并进入状态 256
    RB          偏移，并进入状态 257
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    POW         偏移，并进入状态 258
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 259
    eq_number       转到状态 45
    arguments       转到状态 260
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 261
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 147

   31 eq_number: call_number AADD . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 262
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 148

   32 eq_number: call_number ASUB . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 263
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 149

   33 eq_number: call_number AMUL . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 264
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 150

   34 eq_number: call_number ADIV . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 265
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 151

   35 eq_number: call_number AMOD . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 266
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 152

   36 eq_number: call_number AINTDIV . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 267
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 153

   38 eq_number: call_number FADD .

    $default  使用规则 38 以归约 (eq_number)


状态 154

   40 eq_number: call_number FSUB .

    $default  使用规则 40 以归约 (eq_number)


状态 155

   37 eq_number: call_number APOW . eq_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    eq_number       转到状态 268
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 156

   69 chose_exp: chose_exp IF . chose_exp ELSE chose_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    chose_exp       转到状态 269
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 157

   71 bool_or: bool_or OR . bool_and

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    bool_and        转到状态 270
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 158

   73 bool_and: bool_and AND . bool_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    bool_not        转到状态 271
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 159

   79 third_number: third_number LESS . bit_or_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or_not      转到状态 272
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 160

   78 third_number: third_number MORE . bit_or_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or_not      转到状态 273
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 161

   77 third_number: third_number EQUAL . bit_or_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or_not      转到状态 274
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 162

   80 third_number: third_number MOREEQ . bit_or_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or_not      转到状态 275
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 163

   81 third_number: third_number LESSEQ . bit_or_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or_not      转到状态 276
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 164

   82 third_number: third_number NOTEQ . bit_or_not

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or_not      转到状态 277
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 165

   84 bit_or_not: bit_or_not BITNOTOR . bit_or

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_or          转到状态 278
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 166

   86 bit_or: bit_or BITOR . bit_and

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_and         转到状态 279
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 167

   88 bit_and: bit_and BITAND . bit_move

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    bit_move        转到状态 280
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 168

   90 bit_move: bit_move BITRIGHT . second_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    second_number   转到状态 281
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 169

   91 bit_move: bit_move BITLEFT . second_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    second_number   转到状态 282
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 170

   93 second_number: second_number ADD . first_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    first_number    转到状态 283
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 171

   94 second_number: second_number SUB . first_number

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    first_number    转到状态 284
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 172

   97 first_number: first_number DIV . negative

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    negative        转到状态 285
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 173

   96 first_number: first_number MUL . negative

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    negative        转到状态 286
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 174

   98 first_number: first_number MOD . negative

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    negative        转到状态 287
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 175

   99 first_number: first_number INTDIV . negative

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    BITNOT      偏移，并进入状态 38

    negative        转到状态 288
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 176

  105 zero_number: zero_number POW . attribute

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    attribute       转到状态 289
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 177

  106 zero_number: zero_number LOG . attribute

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    attribute       转到状态 290
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 178

  107 zero_number: zero_number SQRT . attribute

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    attribute       转到状态 291
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 179

  109 attribute: attribute POINT . call_down

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    call_down       转到状态 292
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 180

  111 call_down: call_slice LI . top_exp RI
  113 call_slice: call_slice LI . slice_arguments RI

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp                转到状态 293
    eq_number              转到状态 45
    slice_arguments        转到状态 294
    slice_arguments_token  转到状态 295
    call_number            转到状态 46
    lambda_exp             转到状态 47
    chose_exp              转到状态 48
    bool_or                转到状态 49
    bool_and               转到状态 50
    bool_not               转到状态 51
    third_number           转到状态 52
    bit_or_not             转到状态 53
    bit_or                 转到状态 54
    bit_and                转到状态 55
    bit_move               转到状态 56
    second_number          转到状态 57
    first_number           转到状态 58
    negative               转到状态 59
    bit_not                转到状态 60
    zero_number            转到状态 61
    attribute              转到状态 62
    call_down              转到状态 63
    call_slice             转到状态 64
    iter_value             转到状态 65
    element                转到状态 66
    base_value             转到状态 67
    base_var_              转到状态 68
    base_var_token         转到状态 69
    base_string            转到状态 70


状态 181

  134 base_string: base_string STRING .

    $default  使用规则 134 以归约 (base_string)


状态 182

   18 command: nonlocal_token stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 18 以归约 (command)


状态 183

   16 command: global_token stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 16 以归约 (command)


状态 184

   15 command: default_token stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 15 以归约 (command)


状态 185

   21 command: return_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 21 以归约 (command)


状态 186

  139 return_exp: return_token top_exp .
  140           | return_token top_exp . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    $default  使用规则 139 以归约 (return_exp)

    element         转到状态 296
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 187

   12 command: restarted_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 12 以归约 (command)


状态 188

  143 restarted_exp: restarted_token element .

    $default  使用规则 143 以归约 (restarted_exp)


状态 189

   11 command: restart_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 11 以归约 (command)


状态 190

  146 restart_exp: restart_token element .

    $default  使用规则 146 以归约 (restart_exp)


状态 191

   10 command: continued_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 10 以归约 (command)


状态 192

  149 continued_exp: continued_token element .

    $default  使用规则 149 以归约 (continued_exp)


状态 193

    9 command: continue_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 9 以归约 (command)


状态 194

  152 continue_exp: continue_token element .

    $default  使用规则 152 以归约 (continue_exp)


状态 195

    7 command: break_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 7 以归约 (command)


状态 196

  155 break_exp: break_token element .

    $default  使用规则 155 以归约 (break_exp)


状态 197

    8 command: broken_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 8 以归约 (command)


状态 198

  158 broken_exp: broken_token element .

    $default  使用规则 158 以归约 (broken_exp)


状态 199

  163 elif_exp: ELSE .

    $default  使用规则 163 以归约 (elif_exp)


状态 200

  162 elif_exp: ELIF . LB top_exp RB

    LB  偏移，并进入状态 297


状态 201

  161 if_block: if_block elif_exp . block

    LP  偏移，并进入状态 139

    block  转到状态 298


状态 202

    6 command: if_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 6 以归约 (command)


状态 203

  160 if_block: if_exp block .

    $default  使用规则 160 以归约 (if_block)


状态 204

   19 command: block_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 19 以归约 (command)


状态 205

  165 block_block: block_exp block .

    $default  使用规则 165 以归约 (block_block)


状态 206

   17 command: for_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 17 以归约 (command)


状态 207

  167 for_block: for_exp block .

    $default  使用规则 167 以归约 (for_block)


状态 208

   26 command: include_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 26 以归约 (command)


状态 209

   25 command: import_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 25 以归约 (command)


状态 210

   24 command: raise_exp stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 24 以归约 (command)


状态 211

   23 command: try_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 23 以归约 (command)


状态 212

  182 try_block: try_exp block .

    $default  使用规则 182 以归约 (try_block)


状态 213

  183 try_exp: try_token block . EXCEPT AS element

    EXCEPT  偏移，并进入状态 299


状态 214

   27 command: do_while_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 27 以归约 (command)


状态 215

    5 command: while_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 5 以归约 (command)


状态 216

  187 while_block: while_exp block .

    $default  使用规则 187 以归约 (while_block)


状态 217

   22 command: class_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 22 以归约 (command)


状态 218

  189 class_block: class_exp block .

    $default  使用规则 189 以归约 (class_block)


状态 219

   20 command: def_block stop_token .
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    $default  使用规则 20 以归约 (command)


状态 220

  192 def_block: def_exp block .

    $default  使用规则 192 以归约 (def_block)


状态 221

  123 element: LB top_exp . RB

    RB  偏移，并进入状态 226


状态 222

   43 formal_parameter: MUL top_exp .

    $default  使用规则 43 以归约 (formal_parameter)


状态 223

   66 lambda_exp: LB RB LAMBDA . chose_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    chose_exp       转到状态 300
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 224

   44 formal_parameter: POW top_exp .

    $default  使用规则 44 以归约 (formal_parameter)


状态 225

   45 formal_parameter: top_exp EQ . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 301
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 226

  123 element: LB top_exp RB .

    $default  使用规则 123 以归约 (element)


状态 227

   67 lambda_exp: LB formal_parameter RB . LAMBDA chose_exp

    LAMBDA  偏移，并进入状态 302


状态 228

   46 formal_parameter: formal_parameter COMMA . top_exp
   47                 | formal_parameter COMMA . MUL top_exp
   48                 | formal_parameter COMMA . POW top_exp
   49                 | formal_parameter COMMA . top_exp EQ top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    MUL         偏移，并进入状态 303
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    POW         偏移，并进入状态 304
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 305
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 229

  131 base_var_: LI top_exp . RI base_var_token

    RI  偏移，并进入状态 237


状态 230

  116 iter_value: LP dict_arguments RP .

    $default  使用规则 116 以归约 (iter_value)


状态 231

  120 dict_arguments: dict_arguments COMMA . element COLON element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 306
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 232

  119 dict_arguments: element COLON . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 307
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 233

  188 while_exp: WHILE LB top_exp . RB

    RB  偏移，并进入状态 308


状态 234

  164 if_exp: IF LB top_exp . RB

    RB  偏移，并进入状态 309


状态 235

  201 stop_token: stop_token STOPN .

    $default  使用规则 201 以归约 (stop_token)


状态 236

  200 stop_token: stop_token STOPF .

    $default  使用规则 200 以归约 (stop_token)


状态 237

  131 base_var_: LI top_exp RI . base_var_token

    VAR  偏移，并进入状态 4

    base_var_token  转到状态 310


状态 238

  115 iter_value: LI list_arguments RI .

    $default  使用规则 115 以归约 (iter_value)


状态 239

  118 list_arguments: list_arguments COMMA . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 311
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 240

  137 default_token: DEFAULT base_var_token element .

    $default  使用规则 137 以归约 (default_token)


状态 241

  168 for_exp: FOR LB COMMA . COMMA RB
  170        | FOR LB COMMA . top_exp COMMA RB
  171        | FOR LB COMMA . COMMA top_exp RB
  174        | FOR LB COMMA . top_exp COMMA top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    COMMA       偏移，并进入状态 312
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 313
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 242

  169 for_exp: FOR LB top_exp . COMMA COMMA RB
  172        | FOR LB top_exp . COMMA COMMA top_exp RB
  173        | FOR LB top_exp . COMMA top_exp COMMA RB
  175        | FOR LB top_exp . COMMA top_exp COMMA top_exp RB

    COMMA  偏移，并进入状态 314


状态 243

  114 iter_value: element .
  176 for_exp: FOR LB element . IN top_exp RB

    IN  偏移，并进入状态 315

    $default  使用规则 114 以归约 (iter_value)


状态 244

  193 def_exp: DEF element LB . RB
  194        | DEF element LB . formal_parameter RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    MUL         偏移，并进入状态 109
    RB          偏移，并进入状态 316
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    POW         偏移，并进入状态 111
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp           转到状态 317
    eq_number         转到状态 45
    formal_parameter  转到状态 318
    call_number       转到状态 46
    lambda_exp        转到状态 47
    chose_exp         转到状态 48
    bool_or           转到状态 49
    bool_and          转到状态 50
    bool_not          转到状态 51
    third_number      转到状态 52
    bit_or_not        转到状态 53
    bit_or            转到状态 54
    bit_and           转到状态 55
    bit_move          转到状态 56
    second_number     转到状态 57
    first_number      转到状态 58
    negative          转到状态 59
    bit_not           转到状态 60
    zero_number       转到状态 61
    attribute         转到状态 62
    call_down         转到状态 63
    call_slice        转到状态 64
    iter_value        转到状态 65
    element           转到状态 66
    base_value        转到状态 67
    base_var_         转到状态 68
    base_var_token    转到状态 69
    base_string       转到状态 70


状态 245

  190 class_exp: CLASS element LB . RB
  191          | CLASS element LB . arguments RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    MUL         偏移，并进入状态 256
    RB          偏移，并进入状态 319
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    POW         偏移，并进入状态 258
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 259
    eq_number       转到状态 45
    arguments       转到状态 320
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 261
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 246

  179 raise_exp: RAISE top_exp top_exp .

    $default  使用规则 179 以归约 (raise_exp)


状态 247

  178 import_exp: IMPORT top_exp AS . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 321
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 248

  116 iter_value: LP . dict_arguments RP
  195 block: LP . command_list RP
  196      | LP . block RP
  197      | LP . PASS RP

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 248
    WHILE       偏移，并进入状态 8
    BREAK       偏移，并进入状态 9
    IF          偏移，并进入状态 10
    BROKEN      偏移，并进入状态 11
    CONTINUE    偏移，并进入状态 12
    CONTINUED   偏移，并进入状态 13
    RESTART     偏移，并进入状态 14
    RESTARTED   偏移，并进入状态 15
    REGO        偏移，并进入状态 16
    REWENT      偏移，并进入状态 17
    LI          偏移，并进入状态 18
    DEFAULT     偏移，并进入状态 19
    FOR         偏移，并进入状态 20
    GLOBAL      偏移，并进入状态 21
    NONLOCAL    偏移，并进入状态 22
    BLOCK       偏移，并进入状态 23
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    DEF         偏移，并进入状态 27
    RETURN      偏移，并进入状态 28
    CLASS       偏移，并进入状态 29
    TRY         偏移，并进入状态 30
    RAISE       偏移，并进入状态 31
    THROW       偏移，并进入状态 32
    IMPORT      偏移，并进入状态 33
    INCLUDE     偏移，并进入状态 34
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38
    PASS        偏移，并进入状态 249
    DO          偏移，并进入状态 39
    ASSERT      偏移，并进入状态 40

    command_list     转到状态 250
    command          转到状态 43
    top_exp          转到状态 44
    eq_number        转到状态 45
    call_number      转到状态 46
    lambda_exp       转到状态 47
    chose_exp        转到状态 48
    bool_or          转到状态 49
    bool_and         转到状态 50
    bool_not         转到状态 51
    third_number     转到状态 52
    bit_or_not       转到状态 53
    bit_or           转到状态 54
    bit_and          转到状态 55
    bit_move         转到状态 56
    second_number    转到状态 57
    first_number     转到状态 58
    negative         转到状态 59
    bit_not          转到状态 60
    zero_number      转到状态 61
    attribute        转到状态 62
    call_down        转到状态 63
    call_slice       转到状态 64
    iter_value       转到状态 65
    dict_arguments   转到状态 115
    element          转到状态 322
    base_value       转到状态 67
    base_var_        转到状态 68
    base_var_token   转到状态 69
    base_string      转到状态 70
    nonlocal_token   转到状态 71
    global_token     转到状态 72
    default_token    转到状态 73
    return_exp       转到状态 74
    return_token     转到状态 75
    restarted_exp    转到状态 76
    restarted_token  转到状态 77
    restart_exp      转到状态 78
    restart_token    转到状态 79
    continued_exp    转到状态 80
    continued_token  转到状态 81
    continue_exp     转到状态 82
    continue_token   转到状态 83
    break_exp        转到状态 84
    break_token      转到状态 85
    broken_exp       转到状态 86
    broken_token     转到状态 87
    if_block         转到状态 88
    if_exp           转到状态 89
    block_block      转到状态 90
    block_exp        转到状态 91
    for_block        转到状态 92
    for_exp          转到状态 93
    include_exp      转到状态 94
    import_exp       转到状态 95
    raise_exp        转到状态 96
    try_block        转到状态 97
    try_exp          转到状态 98
    try_token        转到状态 99
    do_while_block   转到状态 100
    while_block      转到状态 101
    while_exp        转到状态 102
    class_block      转到状态 103
    class_exp        转到状态 104
    def_block        转到状态 105
    def_exp          转到状态 106
    block            转到状态 251


状态 249

  197 block: LP PASS . RP

    RP  偏移，并进入状态 323


状态 250

    3 command_list: command_list . command
  195 block: LP command_list . RP

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    RP          偏移，并进入状态 324
    LP          偏移，并进入状态 7
    WHILE       偏移，并进入状态 8
    BREAK       偏移，并进入状态 9
    IF          偏移，并进入状态 10
    BROKEN      偏移，并进入状态 11
    CONTINUE    偏移，并进入状态 12
    CONTINUED   偏移，并进入状态 13
    RESTART     偏移，并进入状态 14
    RESTARTED   偏移，并进入状态 15
    REGO        偏移，并进入状态 16
    REWENT      偏移，并进入状态 17
    LI          偏移，并进入状态 18
    DEFAULT     偏移，并进入状态 19
    FOR         偏移，并进入状态 20
    GLOBAL      偏移，并进入状态 21
    NONLOCAL    偏移，并进入状态 22
    BLOCK       偏移，并进入状态 23
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    DEF         偏移，并进入状态 27
    RETURN      偏移，并进入状态 28
    CLASS       偏移，并进入状态 29
    TRY         偏移，并进入状态 30
    RAISE       偏移，并进入状态 31
    THROW       偏移，并进入状态 32
    IMPORT      偏移，并进入状态 33
    INCLUDE     偏移，并进入状态 34
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38
    DO          偏移，并进入状态 39
    ASSERT      偏移，并进入状态 40

    command          转到状态 143
    top_exp          转到状态 44
    eq_number        转到状态 45
    call_number      转到状态 46
    lambda_exp       转到状态 47
    chose_exp        转到状态 48
    bool_or          转到状态 49
    bool_and         转到状态 50
    bool_not         转到状态 51
    third_number     转到状态 52
    bit_or_not       转到状态 53
    bit_or           转到状态 54
    bit_and          转到状态 55
    bit_move         转到状态 56
    second_number    转到状态 57
    first_number     转到状态 58
    negative         转到状态 59
    bit_not          转到状态 60
    zero_number      转到状态 61
    attribute        转到状态 62
    call_down        转到状态 63
    call_slice       转到状态 64
    iter_value       转到状态 65
    element          转到状态 66
    base_value       转到状态 67
    base_var_        转到状态 68
    base_var_token   转到状态 69
    base_string      转到状态 70
    nonlocal_token   转到状态 71
    global_token     转到状态 72
    default_token    转到状态 73
    return_exp       转到状态 74
    return_token     转到状态 75
    restarted_exp    转到状态 76
    restarted_token  转到状态 77
    restart_exp      转到状态 78
    restart_token    转到状态 79
    continued_exp    转到状态 80
    continued_token  转到状态 81
    continue_exp     转到状态 82
    continue_token   转到状态 83
    break_exp        转到状态 84
    break_token      转到状态 85
    broken_exp       转到状态 86
    broken_token     转到状态 87
    if_block         转到状态 88
    if_exp           转到状态 89
    block_block      转到状态 90
    block_exp        转到状态 91
    for_block        转到状态 92
    for_exp          转到状态 93
    include_exp      转到状态 94
    import_exp       转到状态 95
    raise_exp        转到状态 96
    try_block        转到状态 97
    try_exp          转到状态 98
    try_token        转到状态 99
    do_while_block   转到状态 100
    while_block      转到状态 101
    while_exp        转到状态 102
    class_block      转到状态 103
    class_exp        转到状态 104
    def_block        转到状态 105
    def_exp          转到状态 106


状态 251

  196 block: LP block . RP

    RP  偏移，并进入状态 325


状态 252

  185 do_while_block: DO block while_exp .

    $default  使用规则 185 以归约 (do_while_block)


状态 253

  186 do_while_block: DO block stop_token . while_exp
  200 stop_token: stop_token . STOPF
  201           | stop_token . STOPN

    WHILE  偏移，并进入状态 8
    STOPN  偏移，并进入状态 235
    STOPF  偏移，并进入状态 236

    while_exp  转到状态 326


状态 254

  181 raise_exp: ASSERT top_exp top_exp .

    $default  使用规则 181 以归约 (raise_exp)


状态 255

   30 eq_number: call_number EQ eq_number .

    $default  使用规则 30 以归约 (eq_number)


状态 256

   54 arguments: MUL . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 327
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 257

   63 call_number: call_number LB RB .

    $default  使用规则 63 以归约 (call_number)


状态 258

   56 arguments: POW . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 328
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 259

   50 arguments: top_exp .

    $default  使用规则 50 以归约 (arguments)


状态 260

   51 arguments: arguments . COMMA top_exp
   53          | arguments . COMMA base_var_ EQ top_exp
   55          | arguments . COMMA MUL top_exp
   57          | arguments . COMMA POW top_exp
   64 call_number: call_number LB arguments . RB

    RB     偏移，并进入状态 329
    COMMA  偏移，并进入状态 330


状态 261

   52 arguments: base_var_ . EQ top_exp
  122 element: base_var_ .

    EQ  偏移，并进入状态 331

    EQ        [使用规则 122 以归约 (element)]
    $default  使用规则 122 以归约 (element)


状态 262

   31 eq_number: call_number AADD eq_number .

    $default  使用规则 31 以归约 (eq_number)


状态 263

   32 eq_number: call_number ASUB eq_number .

    $default  使用规则 32 以归约 (eq_number)


状态 264

   33 eq_number: call_number AMUL eq_number .

    $default  使用规则 33 以归约 (eq_number)


状态 265

   34 eq_number: call_number ADIV eq_number .

    $default  使用规则 34 以归约 (eq_number)


状态 266

   35 eq_number: call_number AMOD eq_number .

    $default  使用规则 35 以归约 (eq_number)


状态 267

   36 eq_number: call_number AINTDIV eq_number .

    $default  使用规则 36 以归约 (eq_number)


状态 268

   37 eq_number: call_number APOW eq_number .

    $default  使用规则 37 以归约 (eq_number)


状态 269

   69 chose_exp: chose_exp . IF chose_exp ELSE chose_exp
   69          | chose_exp IF chose_exp . ELSE chose_exp

    IF    偏移，并进入状态 156
    ELSE  偏移，并进入状态 332


状态 270

   71 bool_or: bool_or OR bool_and .
   73 bool_and: bool_and . AND bool_not

    AND  偏移，并进入状态 158

    $default  使用规则 71 以归约 (bool_or)


状态 271

   73 bool_and: bool_and AND bool_not .

    $default  使用规则 73 以归约 (bool_and)


状态 272

   79 third_number: third_number LESS bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 79 以归约 (third_number)


状态 273

   78 third_number: third_number MORE bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 78 以归约 (third_number)


状态 274

   77 third_number: third_number EQUAL bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 77 以归约 (third_number)


状态 275

   80 third_number: third_number MOREEQ bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 80 以归约 (third_number)


状态 276

   81 third_number: third_number LESSEQ bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 81 以归约 (third_number)


状态 277

   82 third_number: third_number NOTEQ bit_or_not .
   84 bit_or_not: bit_or_not . BITNOTOR bit_or

    BITNOTOR  偏移，并进入状态 165

    $default  使用规则 82 以归约 (third_number)


状态 278

   84 bit_or_not: bit_or_not BITNOTOR bit_or .
   86 bit_or: bit_or . BITOR bit_and

    BITOR  偏移，并进入状态 166

    $default  使用规则 84 以归约 (bit_or_not)


状态 279

   86 bit_or: bit_or BITOR bit_and .
   88 bit_and: bit_and . BITAND bit_move

    BITAND  偏移，并进入状态 167

    $default  使用规则 86 以归约 (bit_or)


状态 280

   88 bit_and: bit_and BITAND bit_move .
   90 bit_move: bit_move . BITRIGHT second_number
   91         | bit_move . BITLEFT second_number

    BITRIGHT  偏移，并进入状态 168
    BITLEFT   偏移，并进入状态 169

    $default  使用规则 88 以归约 (bit_and)


状态 281

   90 bit_move: bit_move BITRIGHT second_number .
   93 second_number: second_number . ADD first_number
   94              | second_number . SUB first_number

    ADD  偏移，并进入状态 170
    SUB  偏移，并进入状态 171

    SUB       [使用规则 90 以归约 (bit_move)]
    $default  使用规则 90 以归约 (bit_move)


状态 282

   91 bit_move: bit_move BITLEFT second_number .
   93 second_number: second_number . ADD first_number
   94              | second_number . SUB first_number

    ADD  偏移，并进入状态 170
    SUB  偏移，并进入状态 171

    SUB       [使用规则 91 以归约 (bit_move)]
    $default  使用规则 91 以归约 (bit_move)


状态 283

   93 second_number: second_number ADD first_number .
   96 first_number: first_number . MUL negative
   97             | first_number . DIV negative
   98             | first_number . MOD negative
   99             | first_number . INTDIV negative

    DIV     偏移，并进入状态 172
    MUL     偏移，并进入状态 173
    MOD     偏移，并进入状态 174
    INTDIV  偏移，并进入状态 175

    $default  使用规则 93 以归约 (second_number)


状态 284

   94 second_number: second_number SUB first_number .
   96 first_number: first_number . MUL negative
   97             | first_number . DIV negative
   98             | first_number . MOD negative
   99             | first_number . INTDIV negative

    DIV     偏移，并进入状态 172
    MUL     偏移，并进入状态 173
    MOD     偏移，并进入状态 174
    INTDIV  偏移，并进入状态 175

    $default  使用规则 94 以归约 (second_number)


状态 285

   97 first_number: first_number DIV negative .

    $default  使用规则 97 以归约 (first_number)


状态 286

   96 first_number: first_number MUL negative .

    $default  使用规则 96 以归约 (first_number)


状态 287

   98 first_number: first_number MOD negative .

    $default  使用规则 98 以归约 (first_number)


状态 288

   99 first_number: first_number INTDIV negative .

    $default  使用规则 99 以归约 (first_number)


状态 289

  105 zero_number: zero_number POW attribute .
  109 attribute: attribute . POINT call_down

    POINT  偏移，并进入状态 179

    $default  使用规则 105 以归约 (zero_number)


状态 290

  106 zero_number: zero_number LOG attribute .
  109 attribute: attribute . POINT call_down

    POINT  偏移，并进入状态 179

    $default  使用规则 106 以归约 (zero_number)


状态 291

  107 zero_number: zero_number SQRT attribute .
  109 attribute: attribute . POINT call_down

    POINT  偏移，并进入状态 179

    $default  使用规则 107 以归约 (zero_number)


状态 292

  109 attribute: attribute POINT call_down .

    $default  使用规则 109 以归约 (attribute)


状态 293

   61 slice_arguments_token: top_exp . COLON
  111 call_down: call_slice LI top_exp . RI

    RI     偏移，并进入状态 333
    COLON  偏移，并进入状态 334


状态 294

   59 slice_arguments: slice_arguments . slice_arguments_token
   60                | slice_arguments . top_exp
  113 call_slice: call_slice LI slice_arguments . RI

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    RI          偏移，并进入状态 335
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp                转到状态 336
    eq_number              转到状态 45
    slice_arguments_token  转到状态 337
    call_number            转到状态 46
    lambda_exp             转到状态 47
    chose_exp              转到状态 48
    bool_or                转到状态 49
    bool_and               转到状态 50
    bool_not               转到状态 51
    third_number           转到状态 52
    bit_or_not             转到状态 53
    bit_or                 转到状态 54
    bit_and                转到状态 55
    bit_move               转到状态 56
    second_number          转到状态 57
    first_number           转到状态 58
    negative               转到状态 59
    bit_not                转到状态 60
    zero_number            转到状态 61
    attribute              转到状态 62
    call_down              转到状态 63
    call_slice             转到状态 64
    iter_value             转到状态 65
    element                转到状态 66
    base_value             转到状态 67
    base_var_              转到状态 68
    base_var_token         转到状态 69
    base_string            转到状态 70


状态 295

   58 slice_arguments: slice_arguments_token .

    $default  使用规则 58 以归约 (slice_arguments)


状态 296

  140 return_exp: return_token top_exp element .

    $default  使用规则 140 以归约 (return_exp)


状态 297

  162 elif_exp: ELIF LB . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 338
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 298

  161 if_block: if_block elif_exp block .

    $default  使用规则 161 以归约 (if_block)


状态 299

  183 try_exp: try_token block EXCEPT . AS element

    AS  偏移，并进入状态 339


状态 300

   66 lambda_exp: LB RB LAMBDA chose_exp .
   69 chose_exp: chose_exp . IF chose_exp ELSE chose_exp

    IF  偏移，并进入状态 156

    $default  使用规则 66 以归约 (lambda_exp)


状态 301

   45 formal_parameter: top_exp EQ top_exp .

    $default  使用规则 45 以归约 (formal_parameter)


状态 302

   67 lambda_exp: LB formal_parameter RB LAMBDA . chose_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    chose_exp       转到状态 340
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 303

   47 formal_parameter: formal_parameter COMMA MUL . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 341
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 304

   48 formal_parameter: formal_parameter COMMA POW . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 342
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 305

   46 formal_parameter: formal_parameter COMMA top_exp .
   49                 | formal_parameter COMMA top_exp . EQ top_exp

    EQ  偏移，并进入状态 343

    $default  使用规则 46 以归约 (formal_parameter)


状态 306

  120 dict_arguments: dict_arguments COMMA element . COLON element

    COLON  偏移，并进入状态 344


状态 307

  119 dict_arguments: element COLON element .

    $default  使用规则 119 以归约 (dict_arguments)


状态 308

  188 while_exp: WHILE LB top_exp RB .

    $default  使用规则 188 以归约 (while_exp)


状态 309

  164 if_exp: IF LB top_exp RB .

    $default  使用规则 164 以归约 (if_exp)


状态 310

  131 base_var_: LI top_exp RI base_var_token .

    $default  使用规则 131 以归约 (base_var_)


状态 311

  118 list_arguments: list_arguments COMMA top_exp .

    $default  使用规则 118 以归约 (list_arguments)


状态 312

  168 for_exp: FOR LB COMMA COMMA . RB
  171        | FOR LB COMMA COMMA . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    RB          偏移，并进入状态 345
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 346
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 313

  170 for_exp: FOR LB COMMA top_exp . COMMA RB
  174        | FOR LB COMMA top_exp . COMMA top_exp RB

    COMMA  偏移，并进入状态 347


状态 314

  169 for_exp: FOR LB top_exp COMMA . COMMA RB
  172        | FOR LB top_exp COMMA . COMMA top_exp RB
  173        | FOR LB top_exp COMMA . top_exp COMMA RB
  175        | FOR LB top_exp COMMA . top_exp COMMA top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    COMMA       偏移，并进入状态 348
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 349
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 315

  176 for_exp: FOR LB element IN . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 350
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 316

  193 def_exp: DEF element LB RB .

    $default  使用规则 193 以归约 (def_exp)


状态 317

   42 formal_parameter: top_exp .
   45                 | top_exp . EQ top_exp

    EQ  偏移，并进入状态 225

    $default  使用规则 42 以归约 (formal_parameter)


状态 318

   46 formal_parameter: formal_parameter . COMMA top_exp
   47                 | formal_parameter . COMMA MUL top_exp
   48                 | formal_parameter . COMMA POW top_exp
   49                 | formal_parameter . COMMA top_exp EQ top_exp
  194 def_exp: DEF element LB formal_parameter . RB

    RB     偏移，并进入状态 351
    COMMA  偏移，并进入状态 228


状态 319

  190 class_exp: CLASS element LB RB .

    $default  使用规则 190 以归约 (class_exp)


状态 320

   51 arguments: arguments . COMMA top_exp
   53          | arguments . COMMA base_var_ EQ top_exp
   55          | arguments . COMMA MUL top_exp
   57          | arguments . COMMA POW top_exp
  191 class_exp: CLASS element LB arguments . RB

    RB     偏移，并进入状态 352
    COMMA  偏移，并进入状态 330


状态 321

  178 import_exp: IMPORT top_exp AS element .

    $default  使用规则 178 以归约 (import_exp)


状态 322

  114 iter_value: element .
  119 dict_arguments: element . COLON element

    COLON  偏移，并进入状态 232

    $default  使用规则 114 以归约 (iter_value)


状态 323

  197 block: LP PASS RP .

    $default  使用规则 197 以归约 (block)


状态 324

  195 block: LP command_list RP .

    $default  使用规则 195 以归约 (block)


状态 325

  196 block: LP block RP .

    $default  使用规则 196 以归约 (block)


状态 326

  186 do_while_block: DO block stop_token while_exp .

    $default  使用规则 186 以归约 (do_while_block)


状态 327

   54 arguments: MUL top_exp .

    $default  使用规则 54 以归约 (arguments)


状态 328

   56 arguments: POW top_exp .

    $default  使用规则 56 以归约 (arguments)


状态 329

   64 call_number: call_number LB arguments RB .

    $default  使用规则 64 以归约 (call_number)


状态 330

   51 arguments: arguments COMMA . top_exp
   53          | arguments COMMA . base_var_ EQ top_exp
   55          | arguments COMMA . MUL top_exp
   57          | arguments COMMA . POW top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    MUL         偏移，并进入状态 353
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    POW         偏移，并进入状态 354
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 355
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 356
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 331

   52 arguments: base_var_ EQ . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 357
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 332

   69 chose_exp: chose_exp IF chose_exp ELSE . chose_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 107
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    BITNOT      偏移，并进入状态 38

    chose_exp       转到状态 358
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 333

  111 call_down: call_slice LI top_exp RI .

    $default  使用规则 111 以归约 (call_down)


状态 334

   61 slice_arguments_token: top_exp COLON .

    $default  使用规则 61 以归约 (slice_arguments_token)


状态 335

  113 call_slice: call_slice LI slice_arguments RI .

    $default  使用规则 113 以归约 (call_slice)


状态 336

   60 slice_arguments: slice_arguments top_exp .
   61 slice_arguments_token: top_exp . COLON

    COLON  偏移，并进入状态 334

    $default  使用规则 60 以归约 (slice_arguments)


状态 337

   59 slice_arguments: slice_arguments slice_arguments_token .

    $default  使用规则 59 以归约 (slice_arguments)


状态 338

  162 elif_exp: ELIF LB top_exp . RB

    RB  偏移，并进入状态 359


状态 339

  183 try_exp: try_token block EXCEPT AS . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 360
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 340

   67 lambda_exp: LB formal_parameter RB LAMBDA chose_exp .
   69 chose_exp: chose_exp . IF chose_exp ELSE chose_exp

    IF  偏移，并进入状态 156

    $default  使用规则 67 以归约 (lambda_exp)


状态 341

   47 formal_parameter: formal_parameter COMMA MUL top_exp .

    $default  使用规则 47 以归约 (formal_parameter)


状态 342

   48 formal_parameter: formal_parameter COMMA POW top_exp .

    $default  使用规则 48 以归约 (formal_parameter)


状态 343

   49 formal_parameter: formal_parameter COMMA top_exp EQ . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 361
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 344

  120 dict_arguments: dict_arguments COMMA element COLON . element

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    LB          偏移，并进入状态 107
    LI          偏移，并进入状态 114
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26

    element         转到状态 362
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 345

  168 for_exp: FOR LB COMMA COMMA RB .

    $default  使用规则 168 以归约 (for_exp)


状态 346

  171 for_exp: FOR LB COMMA COMMA top_exp . RB

    RB  偏移，并进入状态 363


状态 347

  170 for_exp: FOR LB COMMA top_exp COMMA . RB
  174        | FOR LB COMMA top_exp COMMA . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    RB          偏移，并进入状态 364
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 365
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 348

  169 for_exp: FOR LB top_exp COMMA COMMA . RB
  172        | FOR LB top_exp COMMA COMMA . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    RB          偏移，并进入状态 366
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 367
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 349

  173 for_exp: FOR LB top_exp COMMA top_exp . COMMA RB
  175        | FOR LB top_exp COMMA top_exp . COMMA top_exp RB

    COMMA  偏移，并进入状态 368


状态 350

  176 for_exp: FOR LB element IN top_exp . RB

    RB  偏移，并进入状态 369


状态 351

  194 def_exp: DEF element LB formal_parameter RB .

    $default  使用规则 194 以归约 (def_exp)


状态 352

  191 class_exp: CLASS element LB arguments RB .

    $default  使用规则 191 以归约 (class_exp)


状态 353

   55 arguments: arguments COMMA MUL . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 370
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 354

   57 arguments: arguments COMMA POW . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 371
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 355

   51 arguments: arguments COMMA top_exp .

    $default  使用规则 51 以归约 (arguments)


状态 356

   53 arguments: arguments COMMA base_var_ . EQ top_exp
  122 element: base_var_ .

    EQ  偏移，并进入状态 372

    EQ        [使用规则 122 以归约 (element)]
    $default  使用规则 122 以归约 (element)


状态 357

   52 arguments: base_var_ EQ top_exp .

    $default  使用规则 52 以归约 (arguments)


状态 358

   69 chose_exp: chose_exp . IF chose_exp ELSE chose_exp
   69          | chose_exp IF chose_exp ELSE chose_exp .

    IF  偏移，并进入状态 156

    IF        [使用规则 69 以归约 (chose_exp)]
    $default  使用规则 69 以归约 (chose_exp)


状态 359

  162 elif_exp: ELIF LB top_exp RB .

    $default  使用规则 162 以归约 (elif_exp)


状态 360

  183 try_exp: try_token block EXCEPT AS element .

    $default  使用规则 183 以归约 (try_exp)


状态 361

   49 formal_parameter: formal_parameter COMMA top_exp EQ top_exp .

    $default  使用规则 49 以归约 (formal_parameter)


状态 362

  120 dict_arguments: dict_arguments COMMA element COLON element .

    $default  使用规则 120 以归约 (dict_arguments)


状态 363

  171 for_exp: FOR LB COMMA COMMA top_exp RB .

    $default  使用规则 171 以归约 (for_exp)


状态 364

  170 for_exp: FOR LB COMMA top_exp COMMA RB .

    $default  使用规则 170 以归约 (for_exp)


状态 365

  174 for_exp: FOR LB COMMA top_exp COMMA top_exp . RB

    RB  偏移，并进入状态 373


状态 366

  169 for_exp: FOR LB top_exp COMMA COMMA RB .

    $default  使用规则 169 以归约 (for_exp)


状态 367

  172 for_exp: FOR LB top_exp COMMA COMMA top_exp . RB

    RB  偏移，并进入状态 374


状态 368

  173 for_exp: FOR LB top_exp COMMA top_exp COMMA . RB
  175        | FOR LB top_exp COMMA top_exp COMMA . top_exp RB

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    RB          偏移，并进入状态 375
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 376
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 369

  176 for_exp: FOR LB element IN top_exp RB .

    $default  使用规则 176 以归约 (for_exp)


状态 370

   55 arguments: arguments COMMA MUL top_exp .

    $default  使用规则 55 以归约 (arguments)


状态 371

   57 arguments: arguments COMMA POW top_exp .

    $default  使用规则 57 以归约 (arguments)


状态 372

   53 arguments: arguments COMMA base_var_ EQ . top_exp

    NUMBER      偏移，并进入状态 1
    INT         偏移，并进入状态 2
    STRING      偏移，并进入状态 3
    VAR         偏移，并进入状态 4
    SUB         偏移，并进入状态 5
    LB          偏移，并进入状态 6
    LP          偏移，并进入状态 7
    LI          偏移，并进入状态 18
    FALSE       偏移，并进入状态 24
    TRUE        偏移，并进入状态 25
    NULL_token  偏移，并进入状态 26
    NOT         偏移，并进入状态 35
    FADD        偏移，并进入状态 36
    FSUB        偏移，并进入状态 37
    BITNOT      偏移，并进入状态 38

    top_exp         转到状态 377
    eq_number       转到状态 45
    call_number     转到状态 46
    lambda_exp      转到状态 47
    chose_exp       转到状态 48
    bool_or         转到状态 49
    bool_and        转到状态 50
    bool_not        转到状态 51
    third_number    转到状态 52
    bit_or_not      转到状态 53
    bit_or          转到状态 54
    bit_and         转到状态 55
    bit_move        转到状态 56
    second_number   转到状态 57
    first_number    转到状态 58
    negative        转到状态 59
    bit_not         转到状态 60
    zero_number     转到状态 61
    attribute       转到状态 62
    call_down       转到状态 63
    call_slice      转到状态 64
    iter_value      转到状态 65
    element         转到状态 66
    base_value      转到状态 67
    base_var_       转到状态 68
    base_var_token  转到状态 69
    base_string     转到状态 70


状态 373

  174 for_exp: FOR LB COMMA top_exp COMMA top_exp RB .

    $default  使用规则 174 以归约 (for_exp)


状态 374

  172 for_exp: FOR LB top_exp COMMA COMMA top_exp RB .

    $default  使用规则 172 以归约 (for_exp)


状态 375

  173 for_exp: FOR LB top_exp COMMA top_exp COMMA RB .

    $default  使用规则 173 以归约 (for_exp)


状态 376

  175 for_exp: FOR LB top_exp COMMA top_exp COMMA top_exp . RB

    RB  偏移，并进入状态 378


状态 377

   53 arguments: arguments COMMA base_var_ EQ top_exp .

    $default  使用规则 53 以归约 (arguments)


状态 378

  175 for_exp: FOR LB top_exp COMMA top_exp COMMA top_exp RB .

    $default  使用规则 175 以归约 (for_exp)
